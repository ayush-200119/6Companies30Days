#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
    bool canPair(vector<int> nums, int k) {
        // Code here.
        
        int count[k]={0};
        int size=nums.size();
        
        for(int i=0;i<size;i++)
        {
            count[nums[i]%k]++;
        }
        
        for(int i=0;i<=k/2;i++)
        {
            if(i==0)
            {
                //should be a divisible of 2
                if(count[i]%2!=0)
                return false;
            }
            else
            {
                if(i==(k-i))
                {
                    if(count[i]%2!=0)
                    return false;
                }
                //should have a opposite pair
                else
                {
                    if(count[i]!=count[k-i])
                    return false;
                }
            }
        }
        
        return true;
        
    }
};

// { Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int n, k;
        cin >> n >> k;
        vector<int> nums(n);
        for (int i = 0; i < nums.size(); i++) cin >> nums[i];
        Solution ob;
        bool ans = ob.canPair(nums, k);
        if (ans)
            cout << "True\n";
        else
            cout << "False\n";
    }
    return 0;
}  // } Driver Code Ends