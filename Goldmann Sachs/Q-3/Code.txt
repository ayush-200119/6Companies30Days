//Solution Accepted on GFG


#include <bits/stdc++.h>
using namespace std;



 // } Driver Code Ends


class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
        
        long long int product=1;
        int res=0;
        
        int i=0;
        int j=0;
        int size=a.size();
        
        while(j<size)
        {
            
            // if(a[j]>k)
            // {
            //     j++;
            //     i=j;
            //     product=1;
                
            //     continue;
            // }
            
            product=product*a[j];
            
            if(product<k)
            {
                res+=(j-i+1);
            }
            else
            {
                while(product>=k)
                {
                    product=product/a[i];
                    i++;
                }
                if(i<=j)
                    res+=(j-i+1);
                
            }
            
            j++;
            
            
        }
        
        return res;
        
        
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        long long int k;
        cin >> n >> k;
        vector<int> arr(n);
        for (i = 0; i < n; i++) cin >> arr[i];
        Solution obj;
        cout << obj.countSubArrayProductLessThanK(arr, n, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends