//Similar Question on leetcode

//Question Link:https://leetcode.com/problems/compare-version-numbers/

//If any of the strings is empty check for the other string if it is a non-zero value then it is greater,else same



class Solution {
public:
    
    int stringToDigit(string &s)
    {
        int res=0;
        
        for(int i=0;i<s.length();i++)
        {
            int digit=s[i]-'0';
            res=res*10+digit;
        }
        
        return res;
    }
    
    int compareVersion(string version1, string version2) {
        
        //used for version1
        int i=0;
        int length1=version1.length();
        
        //used for version2
        int j=0;
        int length2=version2.length();
        
        while(i<length1 && j<length2)
        {
            //get the digit for version1 and version2
            string number1;
            string number2;
            
            while(i<length1 && version1[i]!='.')
            {
                number1+=version1[i];
                i++;
            }
            
            //moving ahead if .
            if(i!=length1)
            {
                i++;
            }
            
            while(j<length2 && version2[j]!='.')
            {
                number2+=version2[j];
                j++;
            }
            
            //moving ahead if dot
            if(j!=length2)
            {
                j++;
            }
            
            int n1=stringToDigit(number1);
            int n2=stringToDigit(number2);
            
            if(n1!=n2)
            {
                if(n1>n2)
                {
                    return 1;
                }
                else
                    return -1;
            }
        }
        
        //checkIfEqual
        if(i==length1 && j==length2)
            return 0;
        else if(j!=length2)
        {
            while(j<length2)
            {
                string number2;
                
                while(j<length2 && version2[j]!='.')
                {
                    number2+=version2[j];
                    j++;
                }
                
                if(j!=length2)
                    j++;
                
                int num2=stringToDigit(number2);
                
                //version 2 is greater
                if(num2!=0)
                    return -1;
            }
        }
        else
        {
            while(i<length1)
            {
                string number1;
                while(i<length1 && version1[i]!='.')
                {
                    number1+=version1[i];
                    i++;
                }
                
                if(i!=length1)
                    i++;
                
                int num1=stringToDigit(number1);
                
                //version1 is greater
                if(num1!=0)
                    return 1;
            }
        }
        
        return 0;
        
    }
};