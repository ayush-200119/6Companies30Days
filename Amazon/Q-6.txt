//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function template for C++

class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    
    // steps required:
    // 1)Smaller elements pushed back at the queue.
    // 2)If an larger element is found the all the elements smaller than that are removed from back
    // 3)Everytime at the top we will have the larger element with min index(useful for elimination)
    // 4)At each window check if the first index is out of range
    
    
    vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        // your code here
        deque<int> max;
        
        for(int i=0;i<k;i++)
        {
            if(!max.empty())
            {
                while(!max.empty() && arr[max.back()]<arr[i])
                {
                    max.pop_back();
                }
            }
            max.push_back(i);
        }
        
        vector<int> res;
        res.push_back(arr[max.front()]);
        
        for(int i=k;i<n;i++)
        {
            if(max.front()<=(i-k))
            {
                max.pop_front();
            }
            
            while(!max.empty() && arr[max.back()]<=arr[i])
            {
                max.pop_back();
            }
            max.push_back(i);
            
            res.push_back(arr[max.front()]);
            
        }
        
        return res;
    }
};

// { Driver Code Starts.

int main() {
	
	int t;
	cin >> t;
	
	while(t--){
	    
	    int n, k;
	    cin >> n >> k;
	    
	    int arr[n];
	    for(int i = 0;i<n;i++) 
	        cin >> arr[i];
	    Solution ob;
	    vector <int> res = ob.max_of_subarrays(arr, n, k);
	    for (int i = 0; i < res.size (); i++) 
	        cout << res[i] << " ";
	    cout << endl;
	    
	}
	
	return 0;
}  // } Driver Code Ends