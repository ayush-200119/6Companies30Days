class Solution {
public:
    
    int findMax(vector<int> &piles)
    {
        int ans=INT_MIN;
        for(int i=0;i<piles.size();i++)
        {
            ans=max(ans,piles[i]);
        }
        
        return ans;
    }
    
    int hoursRequired(vector<int> &piles,int chosen)
    {
        int p=0;
        
        for(int i=0;i<piles.size();i++)
        {
            double temp=(double)piles[i]/chosen;
            p+=ceil(temp);
        }
        return p;
    }
    
    int minEatingSpeed(vector<int>& piles, int h) {
        
        int low=1;
        int high=findMax(piles);
        
        int ans=INT_MAX;
        
        while(low<=high)
        {
            int mid=low-((low-high)/2);
            
            int p=hoursRequired(piles,mid);
            
            if(p<=h)
            {
                ans=min(ans,mid);
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        
        return ans;
        
        
    }
};