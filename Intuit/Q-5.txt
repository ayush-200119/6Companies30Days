class Solution {
public:
    
    int sumArray(vector<int> &nums)
    {
        int ans=0;
        for(int i=0;i<nums.size();i++)
        {
            ans+=nums[i];
        }
        
        return ans;
    }
    
    int totalParts(vector<int> &nums,long long int target)
    {
        int parts=1;
        
        long long int sum=0;
        
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>target)
                return INT_MAX;
            
            if(sum+nums[i]>target)
            {
                sum=nums[i];
                parts++;
            }
            else
            {
                sum=sum+nums[i];
            }
        }
        
        return parts;
    }
        
    
    
    
    int splitArray(vector<int>& nums, int m) {
        
        int low=0;
        int high=sumArray(nums);
        
        int ans=INT_MAX;
        
        while(low<=high)
        {
            int mid=(low+high)/2;
            
            int parts=totalParts(nums,mid);
            
            if(parts<=m)
            {
                ans=min(ans,mid);
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
            // else
            // {
            //     ans=min(ans,mid);
            //     high=mid-1;                
            // }
            
        }
        
        return ans;
        
    }
};