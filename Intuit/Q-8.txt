class Solution {
public:
    
    int possible(unordered_map<int,int> &mp)
    {
        int ans=0;
        for(auto p:mp)
        {
            int second=p.second;
            if(second>=2)
            {
                ans+=((second)*(second-1));
            }
        }
        
        return ans;
    }
    
    int numberOfBoomerangs(vector<vector<int>>& points) {
        
        int size=points.size();
        int ans=0;
        
        for(int i=0;i<size;i++)
        {
            unordered_map<int,int> mp;
            for(int j=0;j<size;j++)
            {
                if(j!=i)
                {
                    //calculate the difference and put in hashMap
                    int x1=points[i][0];
                    int y1=points[i][1];
        
                    int x2=points[j][0];
                    int y2=points[j][1];
                    
                    int squareSum=(x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);
                    
                    mp[squareSum]++;
                }
            }
            
            //at the end calculate answers
            ans+=possible(mp);
            
        }
        
        return ans;
        
        
    }
};